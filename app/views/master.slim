== styled_flash
div.main.mui-container
  div.app-bar.center
    = @player.name
    | (мастер)
  div.app-bar.mui-container-fluid
    div.mui-row
      div.center.mui-col-xs-2
        a href='/master/msg' Собщ
        - players = @player.adventure.players.where(is_master: false).order(:name)
        - players.each do |p|
          span id="chat-indicator#{p.id}" class="chat-indicator no-messages" data-chat-id="#{p.id}"
            i.iw-bell
      div.center.mui-col-xs-2.mui--divider-left
        a href='/note' Заметки
      div.center.mui-col-xs-4.mui--divider-left
        a href='/rules' Правила
      div.center.mui-col-xs-2.mui--divider-left
        a href='/map'
          i.iw-map
      div.center.mui-col-xs-2.mui--divider-left
        a href='/logout'
          i.iw-cross

  div.dnd-flex-row.mui--z2.fullwidth
    span.dnd-flex-grow1.mui--text-center onclick="toggle_item('fight');"
      = t('fights')
    span.mui--text-right
      a href="#" onclick="new_fight();"
        i.icon-plus-sign
      | &nbsp;&nbsp;
  div#fight.mui--hide
    div.dnd-flex-row.mui--z2.fullwidth
      div.mui-select.mui-col-xs-12
        label for='race_id'
          = t('race')
        select name='race_id' id='race'
          - Race.where(is_npc: true).order(:id).each do |r|
            option value="#{r.id}" label='#{t("char.#{r.name}")}'
              = t("char.#{r.name}")

      span.mui-btn.mui-btn--small.mui-btn--primary.mui-btn--raised onclick="add_npc();"
        = t('add-npc')

    div.dnd-flex-row.fullwidth#fight-list

javascript:
  var secret="#{{@user.secret}}";
  var player='?player_id='+"#{{@player.id}}";
  function on_websocket_open(ws){
    ws.send(secret+': get_master');
    ws.send(secret+': get_fight');
  }

  function new_fight(){
    ws.send(secret+': new-fight');
  }

  function add_npc() {
    var npc_race = document.getElementById("race").value;
    ws.send(secret+': new-npc '+npc_race);
  }

  function fight_step_down(index){
    ws.send(secret+': fighter-step '+fighters[index].id+' '+fighters[index].is_npc+' -');
  }

  function fight_step_up(index){
    ws.send(secret+': fighter-step '+fighters[index].id+' '+fighters[index].is_npc+' +');
  }

  function fight_delete(index){
    ws.send(secret+': fighter-del '+fighters[index].id+' '+fighters[index].is_npc);
  }

  // change monster HP 
  function f_hp_modify(c,mod){
    var v = get_over_value();
    if(mod=='+'){
      fighters[c].hp += v;
    }
    else if(mod=='-'){
      fighters[c].hp -= v;
    }
    else{
      fighters[c].hp = v;
    }
    ws.send(secret+': f_hp '+fighters[c].id+'='+fighters[c].hp);
  }

  function f_hp_plus(c) { f_hp_modify(c,'+') }
  function f_hp_minus(c){ f_hp_modify(c,'-') }
  function f_hp_set(c)  { f_hp_modify(c,'=') }

  // change monster MAX HP 
  function f_max_hp_modify(c,mod){
    var v = get_over_value();
    if(mod=='+'){
      fighters[c].max_hp += v;
    }
    else if(mod=='-'){
      fighters[c].max_hp -= v;
    }
    else{
      fighters[c].max_hp = v;
    }
    ws.send(secret+': f_max_hp '+fighters[c].id+'='+fighters[c].max_hp);
  }

  function f_max_hp_plus(c) { f_max_hp_modify(c,'+') }
  function f_max_hp_minus(c){ f_max_hp_modify(c,'-') }
  function f_max_hp_set(c)  { f_max_hp_modify(c,'=') }

  // change monster armor class 
  function f_ac_modify(c,mod){
    var v = get_over_value();
    if(mod=='+'){
      fighters[c].armor_class += v;
    }
    else if(mod=='-'){
      fighters[c].armor_class -= v;
    }
    else{
      fighters[c].armor_class = v;
    }
    ws.send(secret+': f_ac '+fighters[c].id+'='+fighters[c].armor_class);
  }

  function f_ac_plus(c) { f_ac_modify(c,'+') }
  function f_ac_minus(c){ f_ac_modify(c,'-') }
  function f_ac_set(c)  { f_ac_modify(c,'=') }


script src="files/common.js"
