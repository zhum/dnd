== styled_flash
div.main.mui-container
  div.app-bar.center
    = @player.name
    | (мастер) 
    = @player.adventure.name
  div.app-bar.mui-container-fluid
    div.mui-row
      div.center.mui-col-xs-2
        a href='/master/msg'
          = t('messages')
        - players = @player.adventure.players.where(is_master: false).order(:name)
        - players.each do |p|
          span id="chat-indicator#{p.id}" class="chat-indicator no-messages" data-chat-id="#{p.id}"
            i.iw-bell
      div.center.mui-col-xs-2.mui--divider-left
        a href='/note'
          = t('notes')
      div.center.mui-col-xs-4.mui--divider-left
        a href='/rules'
          = t('rules')
      div.center.mui-col-xs-2.mui--divider-left
        a href='/map' title="#{t('map')}" alt="#{t('map')}"
          i.iw-map
      div.center.mui-col-xs-1.mui--divider-left
        a href='/player_select' alt="#{t('select_player')}" title="#{t('select_player')}"
          i.iw-cross
      div.center.mui-col-xs-1.mui--divider-left
        a href='/logout' alt="#{t('logout')}" title="#{t('logout')}"
          i.icon-exitalt

  div.dnd-flex-row.mui--z2.fullwidth
    span.dnd-flex-grow1.mui--text-center onclick="toggle_item('fight');"
      = t('fight.fights')
      |:&nbsp;
      span#fight-fase
    span.mui--text-right
      a href="#" onclick="new_fight();" title="#{t('fight.new')}" alt="#{t('fight.new')}"
        i.icon-plus-sign
      | &nbsp;&nbsp;
  div#fight.fight.mui--hide
    div.dnd-flex-cont.fullwidth
      span
        = t('fight.round')
        |:&nbsp;&nbsp;
      span#fight-round.mui--divider-right
        | ...
      |&nbsp;
      span#start-fight-btn.mui-btn.mui-btn--small.mui-btn--primary.mui-btn--raised onclick="start_fight();"
        = t('fight.start')
      |&nbsp;
      span#next-fighter-btn.mui-btn.mui-btn--small.mui-btn--primary.mui-btn--raised.mui--hide onclick="next_fighter();"
        = t('fight.next')
    div.dnd-flex-cont.mui--z2.fullwidth
      span.mui-select.dnd-flex-grow1
        label for='race_id'
          = t('npc-type')
        select name='race_id' id='npc-type'
          - NpcType.order(:id).each do |r|
            option value="#{r.id}" label='#{t("char.#{r.name}")}'
              = t("char.#{r.name}")
      span.dnd-1em
        |&nbsp;
      span.dnd-7em.mui-btn.mui-btn--small.mui-btn--primary.mui-btn--raised onclick="add_npc();"
        = t('add-npc')
      span.dnd-1em
        |&nbsp;
      span.mui-textfield.dnd-3em
        input#npc-num type="text" placeholder="1"
      span.dnd-1em
        |&nbsp;

    div.dnd-flex-row.fullwidth#fight-list


  div.dnd-flex-row.mui--z2.fullwidth
    span.dnd-flex-grow1.mui--text-center onclick="toggle_item('fight-group');"
      = t('fight-groups')
    span.mui--text-right
      input#group-name.mui--hide type='text'
    span.mui--text-right
      a href="#" onclick="new_fight_group();" title="#{t('fight.new-grp')}" alt="#{t('fight.new-grp')}"
        i.icon-plus-sign
      | &nbsp;&nbsp;
  div#fight-group.fight-group.mui--hide
    div.dnd-flex-cont.mui--z2.fullwidth
      span.mui-select.dnd-flex-grow1
        label for='grp_race_id'
          = t('grp-npc-type')
        select name='grp_race_id' id='grp-npc-type'
          - NpcType.order(:id).each do |r|
            option value="#{r.id}" label='#{t("char.#{r.name}")}'
              = t("char.#{r.name}")
      span.dnd-1em
        |&nbsp;
      span.mui-textfield.dnd-3em
        input#grp-npc-num type="text" placeholder="1"
      span.dnd-1em
        |&nbsp;
    div.dnd-flex-row.fullwidth#fight-group-list

////////////////////////////////////////////////////////////////////////
// Templates
////////////////////////////////////////////////////////////////////////
div.mui--hide.template data-template-name='tmpl-grp-data'
  div.mui-row.fullwidth style="display: inline-flex;" onclick="toggle_item('fight-group-{{ grp_id }}');"
    div.mui--pull-left.mui--text-center
      a href="#" onclick="kill_npc_group('{{ grp_id }}');" title="#{t('fight.del-grp')}" alt="#{t('fight.del-grp')}"
        i.icon-circledelete
        |&nbsp;
    div.mui--pull-left.fill-width.mui--text-center
      | {{ grp_name }}
    div.mui--pull-right
      a href="#" onclick="event.stopPropagation(); group2fight('{{ grp_id }}');" title="#{t('fight.to_fight')}" alt="#{t('fight.to_fight')}"
        i.icon-upload
      |&nbsp;
      a href="#" onclick="event.stopPropagation(); new_npc_group('{{ grp_id }}');" title="#{t('fight.new_npc')}" alt="#{t('fight.new_npc')}"
        i.icon-plus-sign
  div.fullwidth.dnd-flex-row id="fight-group-{{ grp_id }}"
    |{{ data }}

div.mui--hide.template data-template-name='tmpl-grp-line'
  div.dnd-flex-cont.fullwidth.dnd-npc-fighter
    div.dnd-flex-grow1
      a href="#" onclick="del_npc_group('{{grp_id}}','{{npc_id}}')"
        i.icon-circledelete
      | &nbsp;
      a.dnd-btn.dnd-btn--primary href="#" id="g_name_{{npc_id}}" onclick="formModal(overFormText('g_name_set',{{npc_id}}));"
        |{{npc_name}}
      | ({{ npc_type }})

    div.dnd-5em.dnd-flex-noresize.center.mui--divider-left
      a.dnd-btn.dnd-btn--primary id="g_hp_{{npc_id}}" href="#" onclick="formModal(overForm3('g_hp_plus','g_hp_minus','g_hp_set',{{npc_id}}));"
        | {{npc_hp}}
      | / 
      a.dnd-btn.dnd-btn--primary id="g_max_hp_{{npc_id}}" href="#" onclick="formModal(overForm3('g_max_hp_plus','g_max_hp_minus','g_max_hp_set',{{npc_id}}));"
        | {{npc_max_hp}}
    div.dnd-5em.dnd-flex-noresize.center.mui--divider-left
      a.dnd-btn.dnd-btn--primary id="g_ac_{{npc_id}}" href="#" onclick="formModal(overForm3('g_ac_plus','g_ac_minus','g_ac_set',{{npc_id}}));"
        | {{npc_armor_class}}
    div.dnd-5em.dnd-flex-noresize.center.mui--divider-left
      a.dnd-btn.dnd-btn--primary id="g_init_{{npc_id}}" href="#" onclick="formModal(overForm3('g_init_plus','g_init_minus','g_init_set',{{npc_id}}));"
        | {{npc_initiative}}

div.mui--hide.template data-template-name='tmpl-grp-head'
  div.dnd-flex-row.fullwidth.dnd-grp-title
    div.fullwidth.dnd-flex-cont
      div.dnd-flex-grow1.mui--text-left
        | Name
      div.dnd-5em.dnd-flex-noresize.center.mui--divider-left
        | HP/MAX
      div.dnd-5em.dnd-flex-noresize.center.mui--divider-left
        | Arm
      div.dnd-5em.dnd-flex-noresize.center.mui--divider-left
        | In
///////////////////////////////////////////////////////////////////////
/// fight
///////////////////////////////////////////////////////////////////////

div.mui--hide.template data-template-name='tmpl-fight-head'
  div.dnd-flex-cont.fullwidth
    div.dnd-flex-grow1 Name
    div.dnd-5em.dnd-flex-noresize.center.mui--divider-left HP/MAX
    div.dnd-3em.dnd-flex-noresize.center.mui--divider-left Arm
    div.dnd-3em.dnd-flex-noresize.center.mui--divider-left In
    div.dnd-5em.dnd-flex-noresize.center.mui--divider-left Step
  
div.mui--hide.template data-template-name='tmpl-fight-line'
  div.dnd-flex-cont.fullwidth
    div class="dnd-1em {{cur_fighter_class}}"
    /'+(fight.fighter_index==i ? ' dnd-cur-fighter' : '')+'
    div class="dnd-flex-grow1 {{f_class}}"
      | {{marker}}
      i class="{{del_class}}" onclick="{{del_action}}({{i}})"
      |&nbsp;
      |{{name}} ({{race}})
    div.dnd-5em.dnd-flex-noresize.center.mui--divider-left
      span class="{{hp_edit_class}}" onclick="{{hp_edit_action}};"
        |{{hp}}
      |/
      span class="{{npc_edit_class}}" onclick="{{max_hp_edit_action}};"
        |{{max_hp}}
    div.dnd-3em.dnd-flex-noresize.center.mui--divider-left
      span class="{{npc_edit_class}}" onclick="{{ac_edit_action}};"
        |{{armor_class}}
    div.dnd-3em.dnd-flex-noresize.center.mui--divider-left
      span class="{{init_edit_class}}" onclick="{{init_edit_action}};"
        |{{initiative}}
    div.dnd-5em.dnd-flex-noresize.center.mui--divider-left
      |{{step_order}}
      |&nbsp;
      i.icon-fastdown onclick="fight_step_down({{i}})"
      |&nbsp;
      i.icon-fastup onclick="fight_step_up({{i}})"
      |&nbsp;




javascript:
  var secret="#{{@user.secret}}";
  var player_str='?player_id='+"#{{@player.id}}";

  //_.templateSettings.interpolate = /{{([s\S]+?)}}/g;
  //var cp_grp_head = _.template(document.getElementById('tmpl-grp-head'));

  function on_websocket_open(ws){
    //ws.send(secret+': get_master');
    ws.send(secret+': player/prefs');
    ws.send(secret+': fight/get_fight');
    ws.send(secret+': fight/get_groups');
  }

  function new_fight(){
    ws.send(secret+': fight/new');
  }

  function new_fight_group(){
    var input = document.getElementById('group-name');
    var is_hidden = input.classList.contains('mui--hide');
    if(is_hidden){
      input.value = '';
      input.classList.remove('mui--hide');
    }
    else{
      var text = input.value;
      input.classList.add('mui--hide');
      ws.send(secret+': fight/new-group '+text);
    }
  }

  function del_fight(){
    ws.send(secret+': fight/del');
  }

  function add_npc() {
    var npc_type = document.getElementById("npc-type").value;
    var npc_num = get_int_value('npc-num');
    if(Number.isNaN(npc_num))
      npc_num = 1;
    ws.send(secret+': fight/new-npc '+npc_type+' '+npc_num);
  }

  function fight_step_down(index){
    ws.send(secret+': fight/fighter-step '+fighters[index].id+' '+fighters[index].is_npc+' -');
  }

  function fight_step_up(index){
    ws.send(secret+': fight/step '+fighters[index].id+' '+fighters[index].is_npc+' +');
  }

  function fighter_delete(index){
    ws.send(secret+': fight/fighter-del '+fighters[index].id+' '+fighters[index].is_npc);
  }

  function fighter_restore(index){
    ws.send(secret+': fight/fighter-restore '+fighters[index].id+' '+fighters[index].is_npc);
  }

  // change monster HP 
  function f_hp_modify(c,mod){
    var v = get_over_value(null);
    if(v === null){
      if(mod=='=')
        return
      v=1
    }
    if(mod=='+'){
      fighters[c].hp += v;
    }
    else if(mod=='-'){
      fighters[c].hp -= v;
    }
    else{
      fighters[c].hp = v;
    }
    ws.send(secret+': fight/hp '+fighters[c].id+'/'+
      (fighters[c].is_npc ? 'n' : 'p')+'='+fighters[c].hp);
  }

  function f_hp_plus(c) { f_hp_modify(c,'+') }
  function f_hp_minus(c){ f_hp_modify(c,'-') }
  function f_hp_set(c)  { f_hp_modify(c,'=') }

  // change monster MAX HP 
  function f_max_hp_modify(c,mod){
    var v = get_over_value(null);
    if(v === null){
      if(mod=='=')
        return
      v=1
    }
    if(mod=='+'){
      fighters[c].max_hp += v;
    }
    else if(mod=='-'){
      fighters[c].max_hp -= v;
    }
    else{
      fighters[c].max_hp = v;
    }
    ws.send(secret+': fight/max_hp '+fighters[c].id+'='+fighters[c].max_hp);
  }

  function f_max_hp_plus(c) { f_max_hp_modify(c,'+') }
  function f_max_hp_minus(c){ f_max_hp_modify(c,'-') }
  function f_max_hp_set(c)  { f_max_hp_modify(c,'=') }

  // change monster armor class 
  function f_ac_modify(c,mod){
    var v = get_over_value(null);
    if(v === null){
      if(mod=='=')
        return
      v=1
    }
    if(mod=='+'){
      fighters[c].armor_class += v;
    }
    else if(mod=='-'){
      fighters[c].armor_class -= v;
    }
    else{
      fighters[c].armor_class = v;
    }
    ws.send(secret+': fight/ac '+fighters[c].id+'='+fighters[c].armor_class);
  }

  function f_ac_plus(c) { f_ac_modify(c,'+') }
  function f_ac_minus(c){ f_ac_modify(c,'-') }
  function f_ac_set(c)  { f_ac_modify(c,'=') }

  // change player initiative manually
  function f_init_modify(c,mod){
    var v = get_over_value(null);
    if(v === null){
      if(mod=='=')
        return
      v=1
    }
    if(mod=='+'){
      fighters[c].initiative += v;
    }
    else if(mod=='-'){
      fighters[c].initiative -= v;
    }
    else{
      fighters[c].initiative = v;
    }
    ws.send(secret+': fight/initiative '+fighters[c].id+'='+fighters[c].initiative);
  }

  function f_init_plus(c) { f_init_modify(c,'+') }
  function f_init_minus(c){ f_init_modify(c,'-') }
  function f_init_set(c)  { f_init_modify(c,'=') }

  function start_fight(){
    ws.send(secret+': fight/next-fase');
  }

  function next_fighter(){
    ws.send(secret+': fight/next');
  }


  function group2fight(grp_id){
    ws.send(secret+': fight/group2fight '+grp_id);
  }

  // grp change monster name
  function g_name_set(npc_id){
    var v = get_over_text('');
    ws.send(secret+': fight/npc_name_grp '+npc_id+'='+v);
  }

  // grp change monster parameter
  function g_modify(type,npc_id,mod){
    var v = get_over_value(null);
    var c = get_int_value('g_'+type+'_'+npc_id);
    if(v === null){
      if(mod=='=')
        return
      v=1
    }
    if(mod=='+'){
      c += v;
    }
    else if(mod=='-'){
      c -= v;
    }
    else{
      c = v;
    }
    ws.send(secret+': fight/grp_'+type+' '+npc_id+'='+c);
  }

  function g_max_hp_plus(c) { g_modify('max_hp',c,'+') }
  function g_max_hp_minus(c){ g_modify('max_hp',c,'-') }
  function g_max_hp_set(c)  { g_modify('max_hp',c,'=') }

  function g_hp_plus(c) { g_modify('hp',c,'+') }
  function g_hp_minus(c){ g_modify('hp',c,'-') }
  function g_hp_set(c)  { g_modify('hp',c,'=') }

  function g_ac_plus(c) { g_modify('ac',c,'+') }
  function g_ac_minus(c){ g_modify('ac',c,'-') }
  function g_ac_set(c)  { g_modify('ac',c,'=') }

  function g_init_plus(c) { g_modify('init',c,'+') }
  function g_init_minus(c){ g_modify('init',c,'-') }
  function g_init_set(c)  { g_modify('init',c,'=') }



  // add npc to group
  function new_npc_group(id){
    var npc_type = document.getElementById("grp-npc-type").value;
    var npc_num = get_int_value('grp-npc-num');
    if(Number.isNaN(npc_num))
      npc_num = 1;
    ws.send(secret+': fight/add-to-group '+id+' '+npc_type+' '+npc_num);
  }

  // del npc to group
  function del_npc_group(id,npc_id){
    ws.send(secret+': fight/del-from-group '+id+' '+npc_id);

  }
  // del group
  function kill_npc_group(id){
    ws.send(secret+': fight/del-group '+id);
  }
  /////////////////////////////////////////////////////////////////////////////
  function render_fight_group(grp) {
    var str = '';//templates['tmpl-grp-head']({grp_id: grp.id, grp_name: grp.name});
    var npc = grp.npc;
    var len = npc.length;
    for (var i = 0; i <len; i++) {
      //var arg = {i: i, grp: grp.id};
      str += templates['tmpl-grp-line']({
        grp_id: grp.id,
        //arg: '{i: '+i+', grp: '+grp.id+'}',
        npc_id: npc[i].id,
        npc_name: npc[i].name,
        npc_type: npc[i].npc_type,
        npc_armor_class: npc[i].armor_class,
        npc_hp: npc[i].hp,
        npc_max_hp: npc[i].max_hp,
        npc_initiative: npc[i].initiative,
      });
    }
    return templates['tmpl-grp-data']({
      data: str,
      grp_id: grp.id,
      grp_name: grp.name
    });
  }

  function render_fight_groups() {
    var str = templates['tmpl-grp-head']({});
    _.forEach(groups, function(grp){
      str += render_fight_group(grp);
    });
    set_html('fight-group-list',str);
  }

script src="files/common.js"
