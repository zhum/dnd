== styled_flash
- char_icons= {'strength' => 'icon-hammeralt','constitution' => 'icon-bone','dexterity' => 'icon-cat','intellegence' => 'icon-student-school','wisdom' => 'icon-bookalt','charisma' => 'icon-star'}

div.main.mui-container
  div.app-bar.center
    = @player.name
  div.app-bar.mui-container-fluid
    div.mui-row
      div.center.mui-col-xs-2
        a href='/player/msg' Собщ
        span#chat-indicator class='no-messages'
          i.iw-bell
      div.center.mui-col-xs-2.mui--divider-left
        a href='/note' Заметки
      div.center.mui-col-xs-4.mui--divider-left
        a href='/rules' Правила
      div.center.mui-col-xs-2.mui--divider-left
        a href='/map'
          i.iw-map
      div.center.mui-col-xs-2.mui--divider-left
        a href='/logout'
          i.iw-cross

  div.info.mui-container-fluid
    div.mui-row
      div.avatar.mui-col-xs-3
        img.avatar src="/img/player/#{@player.id}"
      div.char-info.mui-col-xs-8
        div.fullwidth
          span#player-name.player-name.iw-reload
        div.fullwidth
          span.player-class#player-class
            i.iw-reload
          |&nbsp;/&nbsp;
          span.player-race#player-race
            i.iw-reload
          |&nbsp;/&nbsp;
          span.player-exp#player-exp
            i.iw-reload
        div.fullwidth
          a#hp.hp.dnd-btn.dnd-btn--primary href='#' onclick="formModal(overForm3('hp_plus','hp_minus','hp_set'));"
            i.iw-reload
          | &nbsp; (
          a#max-hp.hp.dnd-btn.dnd-btn--primary href='#' onclick="formModal(overForm3('maxhp_plus','maxhp_minus','maxhp_set'));"
            i.iw-reload
          | ) &nbsp;
          span.hp
            | ХП
        div.fullwidth
          span.coins-total#total-gold
            i.iw-reload
          span.coins-total
            | &nbsp;золота 
      div.coins.fullwidth.dnd-flex-row
          span.center
            a.dnd-btn.dnd-btn--primary href='#' onclick="formModal(overForm3('coins_plus','coins_minus','coins_set',0));"
              | ММ: 
            span#ccoins
              i.iw-reload
          span.center.mui--divider-left
            | &nbsp;
            a.dnd-btn.dnd-btn--primary href='#' onclick="formModal(overForm3('coins_plus','coins_minus','coins_set',1));"
              | СМ: 
            span#scoins
              i.iw-reload
          span.center.mui--divider-left
            | &nbsp;
            a.dnd-btn.dnd-btn--primary href='#' onclick="formModal(overForm3('coins_plus','coins_minus','coins_set',2));"
              | ЗМ: 
            span#gcoins
              i.iw-reload
          span.center.mui--divider-left
            | &nbsp;
            a.dnd-btn.dnd-btn--primary href='#' onclick="formModal(overForm3('coins_plus','coins_minus','coins_set',3));"
              | ЭМ: 
            span#ecoins
              i.iw-reload
          span.center.mui--divider-left
            | &nbsp;
            a.dnd-btn.dnd-btn--primary href='#' onclick="formModal(overForm3('coins_plus','coins_minus','coins_set',4));"
              | ПМ:
            span#pcoins 
              i.iw-reload

  div.dnd-flex-grow1.mui--z2.mui--text-center onclick="toggle_item('main-char');"
    | Основные характеристики
  div#main-char.main-char.dnd-flex-row.mui--bg-primary-light
    div.mui-col-xs-4.mui--divider-left.mui--divider-bottom
      span.mui--text-center.block.fullwidth#ch_armour_class
        i.iw-reload
      span.block.fullwidth.mui--text-center.label1
        i.icon-securityalt-shieldalt
        | КД
    div.mui-col-xs-4.mui-col-sm-4.mui--divider-left.mui--divider-bottom
      span.block.mui--text-center.fullwidth#ch_initiative
        i.iw-reload
      span.block.fullwidth.mui--text-center.label1
        i.icon-queen
        | Инициатива
    div.mui-col-xs-4.mui-col-sm-4.mui--divider-left.mui--divider-bottom
      span.block.mui--text-center.fullwidth#ch_speed
        i.iw-reload
      span.block.fullwidth.mui--text-center.label1
        i.icon-rabbit
        | Скорость
    div.mui-col-xs-4.mui-col-sm-4.mui--divider-left.mui--divider-bottom
      span.block.mui--text-center.fullwidth#ch_pass_attentiveness
        i.iw-reload
      span.block.fullwidth.mui--text-center.label1
        i.icon-glasses
        | Внимательность
    div.mui-col-xs-4.mui-col-sm-4.mui--divider-left.mui--divider-bottom
      span.block.mui--text-center.fullwidth#ch_masterlevel
        i.iw-reload
      span.block.fullwidth.mui--text-center.label1
        i.icon-screwdriver
        | Мастерство
    div.mui-col-xs-4.mui-col-sm-4.mui--divider-left.mui--divider-bottom
      span.block.mui--text-center.fullwidth#ch_hit_dice_full
        | X DY
      span.block.fullwidth.mui--text-center.label1
        | Кости хитов

  div.dnd-flex-row.mui--z2.fullwidth
    span.dnd-flex-grow1.mui--text-center onclick="toggle_item('char');"
      = t('char.characheristics')

  div.mui--clearfix
  div#char
    div.mui-row.mui--divider-bottom
      - ['strength','constitution','dexterity'].each do |i|
        div.mui-col-xs-4.mui--divider-left
          i class="#{char_icons[i]}"
          a.dnd-btn.dnd-btn--primary href='#' onclick="formModal(overForm3('char_plus','char_minus','char_set','#{i}'));"
            = t("char.#{i}")
          span id="mod_#{i}"
            i.iw-reload
      div.mui-row.mui--divider-bottom
      - ['intellegence','wisdom','charisma'].each do |i|
        div.mui-col-xs-4.mui--divider-left
          i class="#{char_icons[i]}"
          a.dnd-btn.dnd-btn--primary href='#' onclick="formModal(overForm3('char_plus','char_minus','char_set','#{i}'));"
            = t("char.#{i}")
          span id="mod_#{i}"
            i.iw-reload
  div.dnd-flex-row.mui--z2.fullwidth
    span.dnd-flex-grow1.mui--text-center onclick="toggle_item('skills');"
      = t('char.skills')
    span.mui--text-right
      a.dnd-btn.dnd-btn--primary onclick="toggle_edit_skills();"
        i.icon-pen.dnd-btn.dnd-btn--primary
  div#skills
    - ['athletics','acrobatics','investigation','perception','survival','performance','intimidation','history','sleight_of_hands','arcana','medicine','deception','nature','insight','religion','stealth','persuasion','animal_handling'].each do |s|
        div.mui-col-xs-6.mui-col-md-4.mui--divider-left
          span id="skill_#{s}"
            | ...
          | &nbsp;
          span
            = t("char.#{s}")
            | &nbsp;
            a.dnd-btn.dnd-btn--primary.skill_edit.mui--hide href='#' onclick="formModal(overForm3('skill_plus','skill_minus','skill_set','#{s}'));"
              i.icon-pen.dnd-btn.dnd-btn--primary

  div.dnd-flex-row.mui--z2.fullwidth
    span.dnd-flex-grow1.mui--text-center onclick="toggle_item('armor');"
      | Доспехи
    span.mui--text-right
      a href="/buy?type=armor"
        i.icon-plus-sign
      | &nbsp;&nbsp;
  div#armor.mui--hide
    i.iw-reload

  div.dnd-flex-row.mui--z2.fullwidth
    span.dnd-flex-grow1.mui--text-center onclick="toggle_item('weapons');"
      | Оружие
    span.mui--text-right
      a href="/buy?type=weapon"
        i.icon-plus-sign
      | &nbsp;&nbsp;
  div#weapons.mui--hide
    span.loading
      i.iw-reload

  div.dnd-flex-row.mui--z2.fullwidth
    span.dnd-flex-grow1.mui--text-center onclick="toggle_item('things');"
      | Вещи
    span.mui--text-right
      a href="/buy?type=things"
        i.icon-plus-sign
      | &nbsp;&nbsp;
  div#things.mui--hide
    span.loading
      i.iw-reload

  div.dnd-flex-row.mui--z2.fullwidth
    span.fullwidth.mui--text-center onclick="toggle_item('fight');"
      | Бой
      span.mui-caret.mui-caret--right
  div#fight.mui--hide
    i.iw-wait.loading

javascript:
  var secret="#{{@user.secret}}";
  var player_str='?player_id='+"#{{@player.id}}";
  function on_websocket_open(ws){
    ws.send(secret+': get_player');
    ws.send(secret+': get_prefs');
  }

  function hp_plus(){
    var v = get_int_value('over_value');
    if(Number.isNaN(v))
      v = 1;
    player['hp'] += v;
    ws.send(secret+': hp='+player['hp']);
  }

  function hp_minus(){
    var v = get_int_value('over_value');
    if(Number.isNaN(v))
      v = 1;
    if(player['hp']-v>=0){
      player['hp'] -= v;
      ws.send(secret+': hp='+player['hp']);
    }
  }

  function hp_set(){
    var v = get_int_value('over_value');
    if(!Number.isNaN(v) && v>=0){
      player['hp'] = v;
      ws.send(secret+': hp='+player['hp']);
    }
  }

  function maxhp_plus(){
    var v = get_int_value('over_value');
    if(Number.isNaN(v))
      v = 1;
    player['max_hp'] += v;
    ws.send(secret+': max_hp='+player['max_hp']);
  }

  function maxhp_minus(){
    var v = get_int_value('over_value');
    if(Number.isNaN(v))
      v = 1;
    if(player['max_hp']-v>=0){
      player['max_hp'] -= v;
      ws.send(secret+': max_hp='+player['max_hp']);
    }
  }

  function maxhp_set(){
    var v = get_int_value('over_value');
    if(!Number.isNaN(v) && v>=0){
      player['max_hp'] = v;
      ws.send(secret+': max_hp='+player['max_hp']);
    }
  }

  function char_plus(mod){
    var v = get_int_value('over_value');
    if(Number.isNaN(v))
      v = 1;
    player['mods'][mod] += v;
    ws.send(secret+': mod '+mod+'='+player['mods'][mod]);
  }

  function char_minus(mod){
    var v = get_int_value('over_value');
    if(Number.isNaN(v))
      v = 1;
    if(player['mods'][mod]-v>=0){
      player['mods'][mod] -= v;
      ws.send(secret+': mod '+mod+'='+player['mods'][mod]);
    }
  }

  function char_set(mod){
    var v = get_int_value('over_value');
    if(Number.isNaN(v)){return;}
    player['mods'][mod] = v;
    ws.send(secret+': mod '+mod+'='+player['mods'][mod]);
  }

  function arm_plus(armor){
    var v = get_int_value('over_value');
    if(Number.isNaN(v))
      v = 1;
    player['armors'][armor]['count'] += v;
    ws.send(secret+': armor '+armor+'='+JSON.stringify(player['armors'][armor]['count']));
  }

  function arm_minus(armor){
    var v = get_int_value('over_value');
    if(Number.isNaN(v))
      v = 1;
    if(player['armors'][armor]['count']-v>=0){
      player['armors'][armor]['count'] -= v;
      ws.send(secret+': armor '+armor+'='+JSON.stringify(player['armors'][armor]['count']));
    }
  }

  function arm_set(armor){
    var v = get_int_value('over_value');
    if(Number.isNaN(v)){return;}
    player['armors'][armor]['count'] = v;
    ws.send(secret+': armor '+armor+'='+JSON.stringify(player['armors'][armor]['count']));
  }

  function thing_plus(thing){
    var v = get_int_value('over_value');
    if(Number.isNaN(v))
      v = 1;
    player['things'][thing]['count'] += v;
    ws.send(secret+': thing '+thing+'='+JSON.stringify(player['things'][thing]['count']));
  }

  function thing_minus(thing){
    var v = get_int_value('over_value');
    if(Number.isNaN(v))
      v = 1;
    if(player['things'][thing]['count']-v>=0){
      player['things'][thing]['count'] -= v;
      ws.send(secret+': thing '+thing+'='+JSON.stringify(player['things'][thing]['count']));
    }
  }

  function thing_set(thing){
    var v = get_int_value('over_value');
    if(Number.isNaN(v)){return;}
    player['things'][thing]['count'] = v;
    ws.send(secret+': thing '+thing+'='+JSON.stringify(player['things'][thing]['count']));
  }

  function weap_plus(weap){
    var v = get_int_value('over_value');
    if(Number.isNaN(v))
      v = 1;
    player['weapons'][weap]['count'] += v;
    ws.send(secret+': weap '+weap+'='+JSON.stringify(player['weapons'][weap]['count']));
  }

  function weap_minus(weap){
    var v = get_int_value('over_value');
    if(Number.isNaN(v))
      v = 1;
    if(player['weapons'][weap]['count']-v>=0){
      player['weapons'][weap]['count'] -= v;
      ws.send(secret+': weap '+weap+'='+JSON.stringify(player['weapons'][weap]['count']));
    }
  }

  function weap_set(weap){
    var v = get_int_value('over_value');
    if(Number.isNaN(v)){return;}
    player['weapons'][weap]['count'] = v;
    ws.send(secret+': weap '+weap+'='+JSON.stringify(player['weapons'][weap]['count']));
  }


  function coins_plus(c){
    var v = get_int_value('over_value');
    if(Number.isNaN(v))
      v = 1;
    player['coins'][c] += v;
    ws.send(secret+': coins='+JSON.stringify(player['coins']));
  }

  function coins_minus(c){
    var v = get_int_value('over_value');
    if(Number.isNaN(v))
      v = 1;
    if(player['coins'][c]-v>=0){
      player['coins'][c] -= v;
      ws.send(secret+': coins='+JSON.stringify(player['coins']));
    }
  }

  function coins_set(c){
    var v = get_int_value('over_value');
    if(!Number.isNaN(v) && v>=0){
      player['coins'][c] = v;
      ws.send(secret+': coins='+JSON.stringify(player['coins']));
    }
  }

  function toggle_edit_skills(){
    document.querySelectorAll('.skill_edit').forEach(function(el){
      el.classList.toggle('mui--hide');
    });
  }

  function get_skill_id_by_name(name){
    for (var i in player['skills']) {
      if(player['skills'][i]['name']==name){
        return i;
      }
    }
    return -1;
  }

  function skill_modify(c,mod){
    var v = get_int_value('over_value');
    if(Number.isNaN(v))
      v = 1;
    var skill = get_skill_id_by_name(c);
    if(skill<0){
      console.log("Oooops! I don't know about skill '"+c+"'!");
      return;
    }
    if(mod=='+'){
      player['skills'][skill]['mod'] += v;
    }
    else if(mod=='-'){
      if(player['skills'][skill]['mod']-v>=0){
        player['skills'][skill]['mod'] -= v;
      }      
    }
    else{
      player['skills'][skill]['mod'] = v;
    }
    ws.send(secret+': skill['+skill+']='+JSON.stringify(player['skills'][skill]['mod']));      
  }

  function skill_plus(c) { skill_modify(c,'+') }
  function skill_minus(c){ skill_modify(c,'-') }
  function skill_set(c)  { skill_modify(c,'=') }

  // function skill_plus(c){
  //   var v = get_int_value('over_value');
  //   if(Number.isNaN(v))
  //     v = 1;
  //   var skill = get_skill_id_by_name(c);
  //   if(skill<0){
  //     Console.log("Oooops! I don't know about skill '"+c+"'!");
  //     return;
  //   }
  //   player['skills'][skill]['mod'] += v;
  //   ws.send(secret+': skills['+skill+']='+JSON.stringify(player['skills'][skill]['mod']));
  // }

  // function skill_minus(c){
  //   var v = get_int_value('over_value');
  //   if(Number.isNaN(v))
  //     v = 1;
  //   var skill = get_skill_id_by_name(c);
  //   if(skill<0){
  //     Console.log("Oooops! I don't know about skill '"+c+"'!");
  //     return;
  //   }
  //   if(player['skills'][c]-v>=0){
  //     player['skills'][c]['mod'] -= v;
  //     ws.send(secret+': skills['+c+']='+JSON.stringify(player['skills'][c]['mod']));
  //   }
  // }

  // function skill_set(c){
  //   var v = get_int_value('over_value');
  //   var skill = get_skill_id_by_name(c);
  //   if(skill<0){
  //     Console.log("Oooops! I don't know about skill '"+c+"'!");
  //     return;
  //   }
  //   if(!Number.isNaN(v) && v>=0){
  //     player['skills'][c]['mod'] = v;
  //     ws.send(secret+': skills['+c+']='+JSON.stringify(player['skills'][c]['mod']));
  //   }
  // }

